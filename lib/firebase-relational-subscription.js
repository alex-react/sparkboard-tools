// Generated by CoffeeScript 1.7.1
(function() {
  var _;

  _ = require("underscore");

  module.exports = function(manifest) {
    _.extend(manifest, {
      handlers: {},
      models: {},
      modelIndex: [],
      parseObject: manifest.parseObject || function(snapshot) {
        var obj;
        obj = snapshot.val();
        obj.priority = snapshot.getPriority();
        obj.id = snapshot.name();
        return obj;
      },
      parseList: manifest.parseList || function(list) {
        return list;
      },
      exportModels: function() {
        var list;
        list = _.chain(this.models).pairs().map(function(pair) {
          return pair[1];
        }).sortBy(function(object) {
          return object.priority;
        });
        return this.parseList(list.value());
      },
      subscribe: function(callback, options) {
        var cancelUpdateObject, exportAllModels, updateObject;
        if (options == null) {
          options = {};
        }
        exportAllModels = (function(_this) {
          return function() {
            if (_(_this.models).keys().length === _this.modelIndex.length) {
              return callback(_this.exportModels());
            }
          };
        })(this);
        updateObject = (function(_this) {
          return function(snapshot) {
            _this.models[snapshot.name()] = _this.parseObject(snapshot);
            return exportAllModels();
          };
        })(this);
        cancelUpdateObject = (function(_this) {
          return function(id) {
            return function() {
              _this.modelIndex = _.without(_this.modelIndex, id);
              return exportAllModels();
            };
          };
        })(this);
        manifest.indexRef.on("child_added", (function(_this) {
          return function(snapshot) {
            var childRef;
            _this.modelIndex.push(snapshot.name());
            childRef = manifest.dataRef.child(snapshot.name());
            childRef.on("value", updateObject, cancelUpdateObject(snapshot.name()));
            return _this.handlers[snapshot.name()] = {
              fn: updateObject,
              ref: childRef
            };
          };
        })(this));
        return manifest.indexRef.on("child_removed", (function(_this) {
          return function(snapshot) {
            var key;
            key = snapshot.name();
            _this.modelIndex = _(_this.modelIndex).without(key);
            delete _this.handlers[key];
            delete _this.models[key];
            return callback(_this.exportModels());
          };
        })(this));
      },
      unsubscribe: function() {
        var key, object, _ref;
        manifest.indexRef.off();
        _ref = this.handlers;
        for (key in _ref) {
          object = _ref[key];
          object.ref.off();
          delete this.handlers[key];
          delete this.models[key];
        }
        return this.modelIndex = [];
      }
    });
    return manifest;
  };

}).call(this);
